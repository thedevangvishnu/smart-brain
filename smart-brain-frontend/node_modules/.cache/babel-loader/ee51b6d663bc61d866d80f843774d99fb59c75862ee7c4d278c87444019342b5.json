{"ast":null,"code":"var _jsxFileName = \"/home/devang/CS/webdev/projects/fullstack/smart-brain/src/App.jsx\";\nimport { Component } from \"react\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport HeroSection from \"./components/hero-section/HeroSection\";\nimport DetectSection from \"./components/detect-section/DetectSection\";\n\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PAT = \"0b67fd927a9441bea48d88e5560ec538\";\n// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID = \"dv080499\";\nconst APP_ID = \"smart-brain\";\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = \"face-detection\";\nconst MODEL_VERSION_ID = \"aa7f35c01e0642fda5cf400f543e7c40\";\nconst IMAGE_URL = \"https://samples.clarifai.com/metro-north.jpg\";\n\n///////////////////////////////////////////////////////////////////////////////////\n// YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n///////////////////////////////////////////////////////////////////////////////////\n\nconst raw = JSON.stringify({\n  user_app_id: {\n    user_id: USER_ID,\n    app_id: APP_ID\n  },\n  inputs: [{\n    data: {\n      image: {\n        url: IMAGE_URL\n      }\n    }\n  }]\n});\nconst requestOptions = {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    Authorization: \"Key \" + PAT\n  },\n  body: raw\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log(\"error\", error));\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      console.log(event.target.value);\n    };\n    this.onButtonPress = event => {\n      console.log(\"click\");\n    };\n    this.state = {\n      input: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-screen bg-slate-200\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center gap-10\",\n        children: [/*#__PURE__*/_jsxDEV(HeroSection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetectSection, {\n          onInputChange: this.onInputChange,\n          onButtonPress: this.onButtonPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","Navigation","HeroSection","DetectSection","jsxDEV","_jsxDEV","PAT","USER_ID","APP_ID","MODEL_ID","MODEL_VERSION_ID","IMAGE_URL","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","data","image","url","requestOptions","method","headers","Accept","Authorization","body","fetch","then","response","text","result","console","log","catch","error","App","constructor","onInputChange","event","target","value","onButtonPress","state","input","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/devang/CS/webdev/projects/fullstack/smart-brain/src/App.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport HeroSection from \"./components/hero-section/HeroSection\";\nimport DetectSection from \"./components/detect-section/DetectSection\";\n\n// Your PAT (Personal Access Token) can be found in the portal under Authentification\nconst PAT = \"0b67fd927a9441bea48d88e5560ec538\";\n// Specify the correct user_id/app_id pairings\n// Since you're making inferences outside your app's scope\nconst USER_ID = \"dv080499\";\nconst APP_ID = \"smart-brain\";\n// Change these to whatever model and image URL you want to use\nconst MODEL_ID = \"face-detection\";\nconst MODEL_VERSION_ID = \"aa7f35c01e0642fda5cf400f543e7c40\";\nconst IMAGE_URL = \"https://samples.clarifai.com/metro-north.jpg\";\n\n///////////////////////////////////////////////////////////////////////////////////\n// YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n///////////////////////////////////////////////////////////////////////////////////\n\nconst raw = JSON.stringify({\n  user_app_id: {\n    user_id: USER_ID,\n    app_id: APP_ID,\n  },\n  inputs: [\n    {\n      data: {\n        image: {\n          url: IMAGE_URL,\n        },\n      },\n    },\n  ],\n});\n\nconst requestOptions = {\n  method: \"POST\",\n  headers: {\n    Accept: \"application/json\",\n    Authorization: \"Key \" + PAT,\n  },\n  body: raw,\n};\n\n// NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n// https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n// this will default to the latest version_id\n\nfetch(\n  \"https://api.clarifai.com/v2/models/\" +\n    MODEL_ID +\n    \"/versions/\" +\n    MODEL_VERSION_ID +\n    \"/outputs\",\n  requestOptions\n)\n  .then((response) => response.text())\n  .then((result) => console.log(result))\n  .catch((error) => console.log(\"error\", error));\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n    };\n  }\n\n  onInputChange = (event) => {\n    console.log(event.target.value);\n  };\n\n  onButtonPress = (event) => {\n    console.log(\"click\");\n  };\n\n  render() {\n    return (\n      <div className=\"w-full h-screen bg-slate-200\">\n        <Navigation />\n        <div className=\"flex flex-col items-center gap-10\">\n          <HeroSection />\n          <DetectSection\n            onInputChange={this.onInputChange}\n            onButtonPress={this.onButtonPress}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,aAAa,MAAM,2CAA2C;;AAErE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,GAAG,kCAAkC;AAC9C;AACA;AACA,MAAMC,OAAO,GAAG,UAAU;AAC1B,MAAMC,MAAM,GAAG,aAAa;AAC5B;AACA,MAAMC,QAAQ,GAAG,gBAAgB;AACjC,MAAMC,gBAAgB,GAAG,kCAAkC;AAC3D,MAAMC,SAAS,GAAG,8CAA8C;;AAEhE;AACA;AACA;;AAEA,MAAMC,GAAG,GAAGC,IAAI,CAACC,SAAS,CAAC;EACzBC,WAAW,EAAE;IACXC,OAAO,EAAET,OAAO;IAChBU,MAAM,EAAET;EACV,CAAC;EACDU,MAAM,EAAE,CACN;IACEC,IAAI,EAAE;MACJC,KAAK,EAAE;QACLC,GAAG,EAAEV;MACP;IACF;EACF,CAAC;AAEL,CAAC,CAAC;AAEF,MAAMW,cAAc,GAAG;EACrBC,MAAM,EAAE,MAAM;EACdC,OAAO,EAAE;IACPC,MAAM,EAAE,kBAAkB;IAC1BC,aAAa,EAAE,MAAM,GAAGpB;EAC1B,CAAC;EACDqB,IAAI,EAAEf;AACR,CAAC;;AAED;AACA;AACA;;AAEAgB,KAAK,CACH,qCAAqC,GACnCnB,QAAQ,GACR,YAAY,GACZC,gBAAgB,GAChB,UAAU,EACZY,cACF,CAAC,CACEO,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,MAAM,IAAKC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CACrCG,KAAK,CAAEC,KAAK,IAAKH,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEE,KAAK,CAAC,CAAC;AAEhD,MAAMC,GAAG,SAASrC,SAAS,CAAC;EAC1BsC,WAAWA,CAAA,EAAG;IACZ,KAAK,CAAC,CAAC;IAAC,KAMVC,aAAa,GAAIC,KAAK,IAAK;MACzBP,OAAO,CAACC,GAAG,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IACjC,CAAC;IAAA,KAEDC,aAAa,GAAIH,KAAK,IAAK;MACzBP,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACtB,CAAC;IAXC,IAAI,CAACU,KAAK,GAAG;MACXC,KAAK,EAAE;IACT,CAAC;EACH;EAUAC,MAAMA,CAAA,EAAG;IACP,oBACEzC,OAAA;MAAK0C,SAAS,EAAC,8BAA8B;MAAAC,QAAA,gBAC3C3C,OAAA,CAACJ,UAAU;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACd/C,OAAA;QAAK0C,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAChD3C,OAAA,CAACH,WAAW;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACf/C,OAAA,CAACF,aAAa;UACZoC,aAAa,EAAE,IAAI,CAACA,aAAc;UAClCI,aAAa,EAAE,IAAI,CAACA;QAAc;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;AACF;AAEA,eAAef,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}