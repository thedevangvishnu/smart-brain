{"ast":null,"code":"var _jsxFileName = \"/home/devang/CS/webdev/projects/fullstack/smart-brain/src/App.jsx\";\nimport { Component } from \"react\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport HeroSection from \"./components/hero-section/HeroSection\";\nimport InputSection from \"./components/input-section/InputSection\";\nimport DetectImageSection from \"./components/detect-image-section/DetectImageSection\";\n\n// setup clarifai and return request options using it\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst returnRequestUsingClarafai = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = \"0b67fd927a9441bea48d88e5560ec538\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"dv080499\";\n  const APP_ID = \"smart-brain\";\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID\n    },\n    inputs: [{\n      data: {\n        image: {\n          url: IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.displayFaceBox = result => {\n      const image = document.getElementById(\"input-image\");\n      const imageWidth = Number(image.imageWidth);\n      const imageHeight = Number(image.imageHeight);\n      console.log(\"image: \", image);\n      console.log(imageWidth, imageHeight);\n      let faceBox = {};\n      const regions = result.outputs[0].data.regions;\n      regions.forEach(region => {\n        // Accessing and rounding the bounding box values\n        const boundingBox = region.region_info.bounding_box;\n        const topRow = boundingBox.top_row.toFixed(3);\n        const leftCol = boundingBox.left_col.toFixed(3);\n        const bottomRow = boundingBox.bottom_row.toFixed(3);\n        const rightCol = boundingBox.right_col.toFixed(3);\n        console.log(`BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonPress = event => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      fetch(\"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\", returnRequestUsingClarafai(this.state.input)).then(response => response.json()).then(result => this.displayFaceBox(result)).catch(error => console.log(\"error\", error));\n    };\n    this.state = {\n      input: \"\",\n      imageUrl: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full h-screen bg-slate-200\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center gap-10\",\n        children: [/*#__PURE__*/_jsxDEV(HeroSection, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputSection, {\n          onInputChange: this.onInputChange,\n          onButtonPress: this.onButtonPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DetectImageSection, {\n          imageUrl: this.state.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["Component","Navigation","HeroSection","InputSection","DetectImageSection","jsxDEV","_jsxDEV","returnRequestUsingClarafai","imageUrl","PAT","USER_ID","APP_ID","IMAGE_URL","raw","JSON","stringify","user_app_id","user_id","app_id","inputs","data","image","url","requestOptions","method","headers","Accept","Authorization","body","App","constructor","displayFaceBox","result","document","getElementById","imageWidth","Number","imageHeight","console","log","faceBox","regions","outputs","forEach","region","boundingBox","region_info","bounding_box","topRow","top_row","toFixed","leftCol","left_col","bottomRow","bottom_row","rightCol","right_col","onInputChange","event","setState","input","target","value","onButtonPress","state","fetch","then","response","json","catch","error","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/devang/CS/webdev/projects/fullstack/smart-brain/src/App.jsx"],"sourcesContent":["import { Component } from \"react\";\nimport Navigation from \"./components/navigation/Navigation\";\nimport HeroSection from \"./components/hero-section/HeroSection\";\nimport InputSection from \"./components/input-section/InputSection\";\nimport DetectImageSection from \"./components/detect-image-section/DetectImageSection\";\n\n// setup clarifai and return request options using it\nconst returnRequestUsingClarafai = (imageUrl) => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = \"0b67fd927a9441bea48d88e5560ec538\";\n  // Specify the correct user_id/app_id pairings\n  // Since you're making inferences outside your app's scope\n  const USER_ID = \"dv080499\";\n  const APP_ID = \"smart-brain\";\n\n  const IMAGE_URL = imageUrl;\n\n  const raw = JSON.stringify({\n    user_app_id: {\n      user_id: USER_ID,\n      app_id: APP_ID,\n    },\n    inputs: [\n      {\n        data: {\n          image: {\n            url: IMAGE_URL,\n          },\n        },\n      },\n    ],\n  });\n\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Key \" + PAT,\n    },\n    body: raw,\n  };\n\n  return requestOptions;\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageUrl: \"\",\n    };\n  }\n\n  displayFaceBox = (result) => {\n    const image = document.getElementById(\"input-image\");\n    const imageWidth = Number(image.imageWidth);\n    const imageHeight = Number(image.imageHeight);\n    console.log(\"image: \", image);\n    console.log(imageWidth, imageHeight);\n    let faceBox = {};\n\n    const regions = result.outputs[0].data.regions;\n    regions.forEach((region) => {\n      // Accessing and rounding the bounding box values\n      const boundingBox = region.region_info.bounding_box;\n      const topRow = boundingBox.top_row.toFixed(3);\n      const leftCol = boundingBox.left_col.toFixed(3);\n      const bottomRow = boundingBox.bottom_row.toFixed(3);\n      const rightCol = boundingBox.right_col.toFixed(3);\n\n      console.log(`BBox: ${topRow}, ${leftCol}, ${bottomRow}, ${rightCol}`);\n    });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onButtonPress = (event) => {\n    this.setState({ imageUrl: this.state.input });\n\n    fetch(\n      \"https://api.clarifai.com/v2/models/\" + \"face-detection\" + \"/outputs\",\n      returnRequestUsingClarafai(this.state.input)\n    )\n      .then((response) => response.json())\n      .then((result) => this.displayFaceBox(result))\n      .catch((error) => console.log(\"error\", error));\n  };\n\n  render() {\n    return (\n      <div className=\"w-full h-screen bg-slate-200\">\n        <Navigation />\n        <div className=\"flex flex-col items-center gap-10\">\n          <HeroSection />\n          <InputSection\n            onInputChange={this.onInputChange}\n            onButtonPress={this.onButtonPress}\n          />\n          <DetectImageSection imageUrl={this.state.imageUrl} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}